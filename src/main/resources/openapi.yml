openapi: 3.0.1
info:
  title: Record Store
  description: Record Store API.
  version: 1.0.0
servers:
- url: /v2
paths:
  /artist/all:
    get:
      summary: get all artists
      operationId: getAllArtists
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            format: int32
          required: false
          description: page number
        - in: query
          name: size
          schema:
            type: integer
            format: int32
          required: false
          description: page size
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtistResponseOpenApi'
  /artist/all/paged:
    get:
      summary: get all artists paged
      operationId: getAllArtistsPaged
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            format: int32
          required: false
          description: page number
        - in: query
          name: size
          schema:
            type: integer
            format: int32
          required: false
          description: page size
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtistPagedResponseOpenApi'
  /artist/filter:
    get:
      summary: get filtered artists
      operationId: getFilterArtists
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: false
          description: artist name
        - in: query
          name: page
          schema:
            type: integer
            format: int32
          required: false
          description: page number
        - in: query
          name: size
          schema:
            type: integer
            format: int32
          required: false
          description: page size
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtistPagedResponseOpenApi'
  /artist/{artistId}:
    get:
      summary: get artist by id
      operationId: getArtistById
      parameters:
        - in: path
          name: artistId
          schema:
            type: integer
          required: true
          description: artist id
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtistResponseOpenApi'
    delete:
      summary: delete artist by id
      operationId: deleteArtistById
      parameters:
        - in: path
          name: artistId
          schema:
            type: integer
          required: true
          description: artist id
      responses:
        204:
          description: artist was deleted
    put:
      summary: update artist by id
      operationId: updateArtistById
      parameters:
        - in: path
          name: artistId
          schema:
            type: integer
          required: true
          description: artist id
      requestBody:
        description: artist to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtistResponseOpenApi'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtistResponseOpenApi'
  /artist/new:
    post:
      summary: add new artist
      operationId: newArtist
      requestBody:
        description: artist to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtistResponseOpenApi'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtistResponseOpenApi'
  /nationality/all:
    get:
      summary: get all nationalities
      operationId: getAllNationalities
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NationalityResponseOpenApi'
  /nationality/new:
    post:
      summary: add new nationality
      operationId: newNationality
      requestBody:
        description: nationality to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NationalityResponseOpenApi'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationalityResponseOpenApi'
  /style/all:
    get:
      summary: get all styles
      operationId: getAllStyles
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StyleResponseOpenApi'
  /style/new:
    post:
      summary: add new style
      operationId: newStyle
      requestBody:
        description: style to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StyleResponseOpenApi'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StyleResponseOpenApi'
  /record/all:
    get:
      summary: get all records
      operationId: getAllRecords
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            format: int32
          required: false
          description: page number
        - in: query
          name: size
          schema:
            type: integer
            format: int32
          required: false
          description: page size
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecordResponseOpenApi'
  /record/all/paged:
    get:
      summary: get all records paged
      operationId: getAllRecordsPaged
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            format: int32
          required: false
          description: page number
        - in: query
          name: size
          schema:
            type: integer
            format: int32
          required: false
          description: page size
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordPagedResponseOpenApi'
  /record/filter:
    get:
      summary: get filtered records
      operationId: getFilterRecords
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: false
          description: record name
        - in: query
          name: artist
          schema:
            type: string
          required: false
          description: artist name
        - in: query
          name: format
          schema:
            type: string
          required: false
          description: format name
        - in: query
          name: style
          schema:
            type: string
          required: false
          description: format name
        - in: query
          name: page
          schema:
            type: integer
            format: int32
            default: 0
          required: false
          description: page number
        - in: query
          name: size
          schema:
            type: integer
            format: int32
            default: 5
          required: false
          description: page size
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordPagedResponseOpenApi'
  /record/{recordId}:
    get:
      summary: get record by id
      operationId: getRecordById
      parameters:
        - in: path
          name: recordId
          schema:
            type: integer
          required: true
          description: record id
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordResponseOpenApi'
    delete:
      summary: delete record by id
      operationId: deleteRecordById
      parameters:
        - in: path
          name: recordId
          schema:
            type: integer
          required: true
          description: reccord id
      responses:
        204:
          description: record was deleted
    put:
      summary: update record by id
      operationId: updateRecordById
      parameters:
        - in: path
          name: recordId
          schema:
            type: integer
          required: true
          description: record id
      requestBody:
        description: record to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordResponseOpenApi'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordResponseOpenApi'
  /record/new:
    post:
      summary: add new record
      operationId: newRecord
      requestBody:
        description: record to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordResponseOpenApi'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordResponseOpenApi'
  /format/all:
    get:
      summary: get formats
      operationId: getAllFormats
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormatResponseOpenApi'
  /format/new:
    post:
      summary: add new format
      operationId: newFormat
      requestBody:
        description: format to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormatResponseOpenApi'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormatResponseOpenApi'
  /orders/new:
    post:
      summary: add new order
      operationId: newOrder
      requestBody:
        description: order to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderResponseOpenApi'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponseOpenApi'
  /orders/all:
    get:
      summary: get all orders paged
      operationId: getAllOrders
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            format: int32
          required: false
          description: page number
        - in: query
          name: size
          schema:
            type: integer
            format: int32
          required: false
          description: page size
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPagedResponseOpenApi'
components:
  schemas:
    OrderResponseOpenApi:
      type: object
      properties:
        id:
          type: integer
        user:
          type: string
        date:
          type: string
          format: date-legacy
        ordersLines:
          type: array
          items:
            $ref: '#/components/schemas/OrderLineResponseOpenApi'
    OrderLineResponseOpenApi:
      type: object
      properties:
        id:
          type: integer
        record:
          $ref: '#/components/schemas/RecordResponseOpenApi'
        units:
          type: integer
    RecordResponseOpenApi:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        image:
          type: string
        format:
          $ref: '#/components/schemas/FormatResponseOpenApi'
        artist:
          $ref: '#/components/schemas/ArtistResponseOpenApi'
        units:
          type: integer
        price:
          type: number
          format: double
    FormatResponseOpenApi:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    StyleResponseOpenApi:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    NationalityResponseOpenApi:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    ArtistResponseOpenApi:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        nationality:
          $ref: '#/components/schemas/NationalityResponseOpenApi'
        style:
          $ref: '#/components/schemas/StyleResponseOpenApi'
    ArtistPagedResponseOpenApi:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/ArtistResponseOpenApi'
        totalPages:
          type: integer
        totalElements:
          type: integer
          format: int64
    RecordPagedResponseOpenApi:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/RecordResponseOpenApi'
        totalPages:
          type: integer
        totalElements:
          type: integer
          format: int64
    OrderPagedResponseOpenApi:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/OrderResponseOpenApi'
        totalPages:
          type: integer
        totalElements:
          type: integer
          format: int64